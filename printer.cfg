[gcode_macro G29]
gcode:
  ;BED_MESH_CALIBRATE
  ;BED_MESH_PROFILE LOAD=MESHFIFTY
  ;BED_MESH_PROFILE LOAD=MESHSIXTY
  ;BED_MESH_PROFILE LOAD=MESHFORTY
  G90
  G1 X15 Y15 Z15
  
[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -55
y_offset: -13
#Higher the offset, the closer to the bed the nozzle will be.
#Lower the offset, the further the nozzle will be.
#If you need more squish or if it's too high, increase the offset.
#If it's too close, lower the offset.
#z_offset: 1.450
pin_move_time: 0.4
probe_with_touch_mode: True
pin_up_touch_mode_reports_triggered: False
stow_on_each_sample: False

[bed_mesh]
speed: 150
horizontal_move_z: 5
mesh_min: 30, 30
mesh_max: 180, 200
probe_count: 6, 6
mesh_pps: 2,2

#[input_shaper]
#shaper_freq_x: 64.4
#shaper_type_x: mzv
#shaper_freq_y: 38.0
#shaper_type_y: mzv

[bed_screws]
screw1: 30,30
screw2: 200,30
screw3: 200,200
screw4: 30,200

[screws_tilt_adjust]
screw1: 70.5,37.5
screw1_name: front left screw
screw2: 240,37.5
screw2_name: front right screw
screw3: 240,207.5
screw3_name: rear right screw
screw4: 70.5,207.5
screw4_name: rear left screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points: 100,100,20  # an example

[safe_z_home]
home_xy_position: 172.5, 130.5
speed: 80.0
z_hop: 10.0
z_hop_speed: 10.0

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: -1
position_min: -1
position_max: 246
homing_speed: 50


[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999


[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
position_endstop: 0
endstop_pin: ^PC1
position_endstop: -13
position_min: -13
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999


[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
position_min: -6
endstop_pin: probe:z_virtual_endstop
#endstop_pin: PC2
#position_endstop: 0.0
position_max: 250


[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD1
rotation_distance: 23.45
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 4.637
nozzle_diameter: 0.400 #set your nozzle diameter
filament_diameter: 1.750
max_extrude_only_distance: 500
max_extrude_only_velocity: 120
pressure_advance: 0.08 #to be calibrated
pressure_advance_smooth_time: 0.03 #to be calibrated
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 280

[tmc2209 extruder]
uart_pin: PC11
uart_address: 3
tx_pin: PC10
interpolate: true
run_current: 0.85 #**
hold_current: 0.100
sense_resistor: 0.11 #**
stealthchop_threshold: 0
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan hotend_cooling_fan]
pin: PB15
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[controller_fan controller_fan ]
stepper: stepper_y, stepper_x, stepper_z
pin: PC7

[fan]
pin: PC6
max_power: 0.5

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_5E0031000250415339373620-if00

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 5000
max_z_velocity: 5
max_z_accel: 100

[display]
lcd_type: emulated_st7920
spi_software_miso_pin: PD8 # status led, Virtual MISO
spi_software_mosi_pin: PD6
spi_software_sclk_pin: PB9
en_pin: PB8
encoder_pins: ^PA10, ^PA9
click_pin: ^!PA15

[output_pin beeper]
pin: PB5

[gcode_macro CALIBRATEBED90]
gcode:
  M190 S90
  G28
  BED_MESH_CALIBRATE PROFILE=MESHNINETY
  BED_MESH_PROFILE SAVE=MESHNINETY
  ;SAVE_CONFIG ;save to config file

[gcode_macro CALIBRATEBED60]
gcode:
  M190 S60
  G28
  BED_MESH_CALIBRATE PROFILE=MESHSIXTY
  BED_MESH_PROFILE SAVE=MESHSIXTY
  ;SAVE_CONFIG ;save to config file

[gcode_macro CALIBRATEBED50]
gcode:
  M190 S50
  G28
  BED_MESH_CALIBRATE PROFILE=MESHFIFTY
  BED_MESH_PROFILE SAVE=MESHFIFTY
  ;SAVE_CONFIG ;save to config file

[gcode_macro CALIBRATEBED40]
gcode:
  M190 S40
  G28
  BED_MESH_CALIBRATE PROFILE=MESHFORTY
  BED_MESH_PROFILE SAVE=MESHFORTY
  ;SAVE_CONFIG ;save to config file

   
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.590
#*# pid_ki = 1.999
#*# pid_kd = 75.615
#*#
#*# [bltouch]
#*# z_offset = 3.470
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.005000, -0.030000, -0.050000, -0.057500, -0.035000, -0.052500
#*# 	  0.047500, 0.020000, 0.032500, 0.040000, 0.057500, 0.022500
#*# 	  0.042500, 0.020000, 0.002500, 0.007500, 0.030000, 0.017500
#*# 	  0.032500, 0.005000, 0.012500, 0.022500, 0.040000, 0.005000
#*# 	  0.072500, 0.050000, 0.025000, 0.032500, 0.052500, 0.035000
#*# 	  0.025000, -0.002500, -0.002500, -0.005000, 0.007500, -0.027500
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 6
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 180.0
